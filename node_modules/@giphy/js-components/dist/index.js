"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.renderGif = exports.renderCarousel = exports.renderVideo = exports.renderGrid = exports.Video = exports.Grid = exports.Gif = exports.Carousel = void 0;
var js_util_1 = require("@giphy/js-util");
require("intersection-observer");
var preact_1 = require("preact");
var carousel_1 = __importDefault(require("./components/carousel"));
var gif_1 = __importDefault(require("./components/gif"));
var grid_1 = __importDefault(require("./components/grid"));
var video_1 = __importDefault(require("./components/video"));
var carousel_2 = require("./components/carousel");
Object.defineProperty(exports, "Carousel", { enumerable: true, get: function () { return __importDefault(carousel_2).default; } });
var gif_2 = require("./components/gif");
Object.defineProperty(exports, "Gif", { enumerable: true, get: function () { return __importDefault(gif_2).default; } });
var grid_2 = require("./components/grid");
Object.defineProperty(exports, "Grid", { enumerable: true, get: function () { return __importDefault(grid_2).default; } });
var video_2 = require("./components/video");
Object.defineProperty(exports, "Video", { enumerable: true, get: function () { return __importDefault(video_2).default; } });
// @ts-ignore
var version = require('../package.json').version;
// send headers with library type and version
js_util_1.appendGiphySDKRequestHeader("X-GIPHY-SDK-NAME", 'JavascriptSDK');
js_util_1.appendGiphySDKRequestHeader("X-GIPHY-SDK-VERSION", version);
/**
 * render a grid
 *
 * @param gridProps grid props
 * @param target the node to render into it
 */
var renderGrid = function (gridProps, target) {
    preact_1.render(preact_1.h(grid_1.default, __assign({}, gridProps)), target);
    return function () { return preact_1.render(null, target); };
};
exports.renderGrid = renderGrid;
/**
 * render a video
 *
 * @param carouselProps Carousel props
 * @param target the node to render into it
 */
var renderVideo = function (videoProps, target) {
    preact_1.render(preact_1.h(video_1.default, __assign({}, videoProps)), target);
    return function () { return preact_1.render(null, target); };
};
exports.renderVideo = renderVideo;
/**
 * render a carousel
 *
 * @param carouselProps Carousel props
 * @param target the node to render into it
 */
var renderCarousel = function (carouselProps, target) {
    preact_1.render(preact_1.h(carousel_1.default, __assign({}, carouselProps)), target);
    return function () { return preact_1.render(null, target); };
};
exports.renderCarousel = renderCarousel;
/**
 * render a grid
 *
 * @param gif Gif props
 * @param target the node to render into it
 */
var renderGif = function (gifProps, target) {
    preact_1.render(preact_1.h(gif_1.default, __assign({}, gifProps)), target);
    return function () { return preact_1.render(null, target); };
};
exports.renderGif = renderGif;
//# sourceMappingURL=index.js.map