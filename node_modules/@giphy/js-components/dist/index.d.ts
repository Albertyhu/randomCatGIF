import 'intersection-observer';
import { ComponentProps } from 'preact';
import Carousel from './components/carousel';
import { Props as GifProps } from './components/gif';
import Grid from './components/grid';
import Video from './components/video';
export { default as Carousel } from './components/carousel';
export { default as Gif } from './components/gif';
export { default as Grid } from './components/grid';
export { default as Video } from './components/video';
declare type RemoveCallback = () => void;
/**
 * render a grid
 *
 * @param gridProps grid props
 * @param target the node to render into it
 */
export declare const renderGrid: (gridProps: Grid['props'], target: HTMLElement) => RemoveCallback;
/**
 * render a video
 *
 * @param carouselProps Carousel props
 * @param target the node to render into it
 */
export declare const renderVideo: (videoProps: ComponentProps<typeof Video>, target: HTMLElement) => RemoveCallback;
/**
 * render a carousel
 *
 * @param carouselProps Carousel props
 * @param target the node to render into it
 */
export declare const renderCarousel: (carouselProps: Carousel['props'], target: HTMLElement) => RemoveCallback;
/**
 * render a grid
 *
 * @param gif Gif props
 * @param target the node to render into it
 */
export declare const renderGif: (gifProps: GifProps, target: HTMLElement) => RemoveCallback;
