"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var js_util_1 = require("@giphy/js-util");
var emotion_1 = require("emotion");
var preact_1 = require("preact");
var hooks_1 = require("preact/hooks");
var play_pause_1 = require("./controls/play-pause");
var volume_1 = require("./controls/volume");
var progress_bar_1 = __importDefault(require("./progress-bar"));
var video_1 = __importDefault(require("./video"));
var containerCss = emotion_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    position: relative;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: black;\n"], ["\n    position: relative;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: black;\n"])));
var volumeCss = emotion_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    display: flex;\n    justify-content: center;\n    align-items: center;\n"], ["\n    display: flex;\n    justify-content: center;\n    align-items: center;\n"])));
var controlsCss = emotion_1.css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n    left: 10px;\n    display: flex;\n    justify-content: space-between;\n    transition: opacity ease-out 250ms;\n"], ["\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n    left: 10px;\n    display: flex;\n    justify-content: space-between;\n    transition: opacity ease-out 250ms;\n"])));
var VideoPlayer = function (props) {
    var width = props.width, hideMute = props.hideMute, hidePlayPause = props.hidePlayPause, hideProgressBar = props.hideProgressBar, className = props.className, persistentControls = props.persistentControls;
    var _a = hooks_1.useState(false), isHovered = _a[0], setIsHovered = _a[1];
    var _b = hooks_1.useState('paused'), playState = _b[0], setPlayState = _b[1];
    var _c = hooks_1.useState(null), videoEl = _c[0], _setVideoEl = _c[1];
    var _d = hooks_1.useState(props.muted), muted = _d[0], setMuted = _d[1];
    var _e = hooks_1.useState(false), mutedByBrowser = _e[0], setMutedByBrowser = _e[1];
    var onStateChange = props.onStateChange, setVideoEl = props.setVideoEl, onMuted = props.onMuted, onUserMuted = props.onUserMuted;
    var height = props.height || js_util_1.getGifHeight(props.gif, width);
    var combinedSetPlayState = hooks_1.useCallback(function (args) {
        onStateChange === null || onStateChange === void 0 ? void 0 : onStateChange(args);
        setPlayState(args);
    }, [onStateChange, setPlayState]);
    var combinedOnMuted = hooks_1.useCallback(function (args) {
        onMuted === null || onMuted === void 0 ? void 0 : onMuted(args);
        setMutedByBrowser(args);
    }, [setMutedByBrowser, onMuted]);
    var combinedSetVideoEl = hooks_1.useCallback(function (args) {
        setVideoEl === null || setVideoEl === void 0 ? void 0 : setVideoEl(args);
        _setVideoEl(args);
    }, [setVideoEl, _setVideoEl]);
    var toggleMute = function () {
        if (mutedByBrowser) {
            setMutedByBrowser(false);
            setMuted(false);
        }
        else {
            setMuted(!muted);
        }
    };
    hooks_1.useEffect(function () {
        setMuted(props.muted);
    }, [props.muted]);
    return (preact_1.h("div", { className: emotion_1.cx(containerCss, className), style: { width: width, height: height }, onMouseOver: function () { return setIsHovered(true); }, onMouseLeave: function () { return setIsHovered(false); } },
        preact_1.h(video_1.default, __assign({}, props, { onStateChange: combinedSetPlayState, onMuted: combinedOnMuted, setVideoEl: combinedSetVideoEl, muted: muted })),
        preact_1.h("div", { style: { opacity: persistentControls || isHovered ? 1 : 0 }, className: controlsCss },
            videoEl && !hidePlayPause ? (preact_1.h("div", { onClick: function () {
                    if (playState === 'playing')
                        videoEl.pause();
                    else
                        videoEl.play();
                } }, playState === 'playing' ? preact_1.h(play_pause_1.PauseIcon, null) : preact_1.h(play_pause_1.PlayIcon, null))) : (preact_1.h("div", null)),
            !hideMute && (preact_1.h("div", { className: volumeCss, onClick: function (e) {
                    onUserMuted === null || onUserMuted === void 0 ? void 0 : onUserMuted(!muted);
                    e.preventDefault();
                    toggleMute();
                } }, muted || mutedByBrowser ? preact_1.h(volume_1.VolumeOffIcon, null) : preact_1.h(volume_1.VolumeOnIcon, null)))),
        (persistentControls || isHovered) && !hideProgressBar && videoEl ? (preact_1.h(progress_bar_1.default, { videoEl: videoEl })) : null));
};
var VideoWrapper = function (props) {
    return props.controls ? preact_1.h(VideoPlayer, __assign({}, props)) : preact_1.h(video_1.default, __assign({}, props));
};
VideoWrapper.className = video_1.default.className;
exports.default = VideoWrapper;
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=index.js.map