"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var emotion_1 = require("emotion");
var js_brand_1 = require("@giphy/js-brand");
var hooks_1 = require("preact/hooks");
var preact_1 = require("preact");
var useRaf = function (ms, delay) {
    if (ms === void 0) { ms = 1e12; }
    if (delay === void 0) { delay = 0; }
    var _a = hooks_1.useState(0), elapsed = _a[0], set = _a[1];
    hooks_1.useLayoutEffect(function () {
        var raf;
        var timerStop;
        var start;
        var onFrame = function () {
            var time = Math.min(1, (Date.now() - start) / ms);
            set(time);
            // eslint-disable-next-line @typescript-eslint/no-use-before-define
            loop();
        };
        var loop = function () {
            raf = requestAnimationFrame(onFrame);
        };
        var onStart = function () {
            timerStop = setTimeout(function () {
                cancelAnimationFrame(raf);
                set(1);
            }, ms);
            start = Date.now();
            loop();
        };
        var timerDelay = setTimeout(onStart, delay);
        return function () {
            clearTimeout(timerStop);
            clearTimeout(timerDelay);
            cancelAnimationFrame(raf);
        };
    }, [ms, delay]);
    return elapsed;
};
var barCss = emotion_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    background: ", ";\n    height: 2px;\n    position: absolute;\n    width: 5px;\n    bottom: 0;\n    left: 0;\n    opacity: 0.95;\n"], ["\n    background: ", ";\n    height: 2px;\n    position: absolute;\n    width: 5px;\n    bottom: 0;\n    left: 0;\n    opacity: 0.95;\n"])), js_brand_1.giphyWhite);
var ProgressBar = function (_a) {
    var videoEl = _a.videoEl;
    var _b = hooks_1.useState(0), progress = _b[0], setProgress = _b[1];
    useRaf(2147483647, 100);
    var time = (videoEl === null || videoEl === void 0 ? void 0 : videoEl.currentTime) || 0;
    var duration = (videoEl === null || videoEl === void 0 ? void 0 : videoEl.duration) || 0;
    var val = time / duration;
    hooks_1.useLayoutEffect(function () {
        setProgress(val);
    }, [val, setProgress]);
    var perc = Math.round(progress * 100);
    perc = duration < 10 && perc > 98 ? 100 : perc;
    return preact_1.h("div", { style: { width: perc + "%" }, className: barCss });
};
exports.default = ProgressBar;
var templateObject_1;
//# sourceMappingURL=progress-bar.js.map